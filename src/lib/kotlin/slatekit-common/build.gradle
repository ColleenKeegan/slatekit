
group 'com.slatekit'
version '0.9.4-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'


ext {
    // the password needs to be specified via command line
    mavenUser = project.hasProperty('mavenUser') ? project.getProperty('mavenUser') : ''
    mavenPswd = project.hasProperty('mavenPswd') ? project.getProperty('mavenPswd') : ''
}

buildscript {
    ext.kotlin_version = '1.1.2'

    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "com.googlecode.json-simple:json-simple:1.1"
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar
            artifact javadocJar


            pom.withXml {
                asNode().with {
                    appendNode('packaging', 'jar')
                    appendNode('name', 'Slate Kit Common')
                    appendNode('description', 'Slate Kit Utilities for Kotlin')
                    appendNode('url', 'https://github.com/code-helix/slatekit')
                    appendNode('scm').with {
                        appendNode('url', 'https://github.com/code-helix/slatekit')
                        appendNode('connection', 'scm:git:git://github.com:code-helix/slatekit.git')
                    }
                    appendNode('issueManagement').with {
                        appendNode('url', 'https://github.com/code-helix/slatekit/issues')
                        appendNode('system', 'GitHub')
                    }
                    appendNode('licenses').with {
                        appendNode('license').with {
                            appendNode('name', 'Apache License 2.0')
                            appendNode('url', 'https://github.com/code-helix/slatekit/blob/master/LICENSE')
                        }
                    }
                    appendNode('organization').with {
                        appendNode('name', 'CodeHelix Solutions Inc')
                        appendNode('url', 'http://www.codehelix.co')
                    }
                    appendNode('developers').with {
                        appendNode('developer').with {
                            appendNode('id', 'kishore')
                            appendNode('name', 'Kishore Reddy')
                            appendNode('email', 'kishore@codehelix.co')
                            appendNode('organization', 'Code Helix')
                            appendNode('organizationUrl', 'http://www.codehelix.co')
                            appendNode('timezone', '1')
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
            credentials {
                username project.mavenUser
                password project.mavenPswd
            }
        }
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}