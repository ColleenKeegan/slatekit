# environment selection
# this can be overriden on the commandline via -env=qa
env : "loc"
name : "resources test"

test {
  string = "resources test"
  boolean_false = false
  boolean_true = true
  integer = 20
  double = 20.2
}

# This config file is :
# 1. common to all other config files
# 2. inherited by all other config files.
# 3. settings can be overriden in the derived files.
# these can be overriden in each of the environment specific config files
# e.g.
# dev = env.dev.conf ( development )
# qa  = env.qa1.conf ( qa testing  )
# loc = env.loc.conf ( local dev   )
# pro = env.pro.conf ( production  )
app {
  id       : "slate.tests"
  company  : "codehelix"
  name     : "Sample Tests"
  desc     : "Sample Test Application"
  region   : "ny"
  version  : "0.9.1"
  url      : "http://sampleapp.slatekit.com"
  group    : "codehelix.co"
  contact  : "kishore@codehelix.co"
  tags     : "slate,shell,cli"
  examples : "sampleapp -env=dev -log.level=debug -region='ny' -enc=false"
}

# config mode = jars|conf|file://./mydir
# by default, the config files are packaged with inside the jar.
# by specifying "conf", the configs are loaded from "/conf/ folder at the same level as jar.
# by specifying file://<dir> you can specify your own directory location
conf {
  dirs : "jars"
}


# log and level
log {
  name     : "@{app.name}-@{env.name}-@{date}.log"
  enabled  : true
  level    : "info"
}


# DB Settings - defaulted to dev database
db {
  enabled  : false
  source   : "conf"
  driver   : "com.mysql.jdbc.Driver"
  url      : "jdbc:mysql://localhost/db1"
  user     : "root"
  pswd     : "123456789"
}


sms1 {
  account : "acc1"
  key     : "key1"
  pass    : "pas1"
  env     : "env1"
  tag     : "tag1"
}


sms2 {
  location: "jars://sms2.conf"
}


sms3 {
  location: "user://.slatekit/conf/sms3.conf"
}


sms4 {
  location: "file://C:/Users/kv/.slatekit/conf/sms4.conf"
}